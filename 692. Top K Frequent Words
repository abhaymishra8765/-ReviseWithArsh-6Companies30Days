// 692. Top K Frequent Words

#include <bits/stdc++.h>
class Solution 
{
public:
    static bool cmp(pair<int,string>&a, pair<int,string>&b)
    {
        if(a.first != b.first) return a.first < b.first;
        return a.second > b.second;
    }

    vector<string> topKFrequent(vector<string>& words, int k) 
    {
         unordered_map<string,int>mp;
         unordered_map<string,int>mp2;
         int n = words.size();
         for(int i = 0; i < n; i++) mp[words[i]]++; 
         priority_queue<pair<int,string>, vector<pair<int, string>>, decltype(&cmp)>pq(&cmp); 
         for(int i = 0; i < n; i++)
         {
             if(mp2[words[i]] == 0)
             {
                 pq.push({mp[words[i]], words[i]});
                 mp2[words[i]] = 1;
             }
         }

         int cnt = 0;
         vector<string>ans;
         while(!pq.empty())
         {
             if(cnt == k) break;
             auto i = pq.top();
             pq.pop();
             string it = i.second;
             ans.push_back(it);
             cnt++;
         } 
         
         return ans;
    }
};
