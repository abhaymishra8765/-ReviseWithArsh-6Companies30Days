// 2099. Find Subsequence of Length K With the Largest Sum

class Solution 
{
public:
    vector<int> maxSubsequence(vector<int>& nums, int k) 
    {
         int n = nums.size();
         vector<int>ans;
         ans = nums;
         sort(ans.begin(), ans.end());
         int mini = ans[n-k];
         vector<int>res;
         int cnt = 0;
         for(int i = n-k; i < n; i++)
         {
             if(ans[i] == mini) cnt++;
             else break;
         }

         for(int i = 0; i < n; i++)
         {
             if(nums[i] > mini) res.push_back(nums[i]);
             if(nums[i] == mini && cnt > 0)
             {
                 res.push_back(mini);
                 cnt--;
             }
         }

         return res;
 
    }
};
