//2
//2933. High-Access Employees

class Solution 
{
public:
    vector<string> findHighAccessEmployees(vector<vector<string>>& access_times) 
    {
        int n = access_times.size();
        unordered_map<string,int>mp;
        unordered_map<string,int>mp2;
        for(int i = 0; i < n; i++) mp[access_times[i][0]]++;
        vector<int>time;
        vector<string>ans;

        for(int i = 0; i < n; i++)
        {
            if(mp[access_times[i][0]] >= 3 && mp2[access_times[i][0]] == 0)
            {
                for(int j = 0; j < n; j++)
                {
                    if(access_times[i][0] == access_times[j][0])
                    {
                        int res = 0;
                        string a = access_times[j][1];
                        for(int k = 0; k < 4; k++) res = (res*10) + (a[k]-'0');
                        time.push_back(res);
                    }
                }

                sort(time.begin(), time.end());
                int m = time.size();
                for(int j = 0; j < m-2; j++)
                {
                    if(time[j+2] - time[j] < 100)
                    {
                        ans.push_back(access_times[i][0]);
                        break;
                    }
                }

                time.clear(); 
                mp2[access_times[i][0]] = 1;
            } 
            
        }

        return ans;
    }
};
