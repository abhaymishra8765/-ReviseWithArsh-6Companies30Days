// 718. Maximum Length of Repeated Subarray

class Solution 
{
public:
    int findLength(vector<int>& nums1, vector<int>& nums2) 
    {
        int n = nums1.size();
        int m = nums2.size(); 
        int dp[n][m];
        memset(dp, 0, sizeof(dp));

        for(int i = n-1; i >= 0; i--)
        {
            if(nums1[i] == nums2[m-1]) dp[i][m-1] = 1;
        }

        for(int i = m-1; i >= 0; i--)
        {
            if(nums1[n-1] == nums2[i]) dp[n-1][i] = 1;
        }

        for(int i = n-2; i >= 0; i--)
        {
            for(int j = m-2; j >= 0; j--)
            {
                if(nums1[i] == nums2[j]) dp[i][j] = 1+dp[i+1][j+1];
            }
        }

        int ans = 0;
        for(int i = 0; i < n; i++)
        {
            for(int j = 0; j < m; j++)
            {
                ans = max(ans, dp[i][j]);
            }
        }

        return ans;
    }
};
