// 2400. Number of Ways to Reach a Position After Exactly k Steps

class Solution 
{
public:
     
    int md = 1e9+7;
    long long solve(int s, int e, int k, vector<vector<int>>&dp)
    {
        if(k == 0) return (s == e) ? 1:0; 

        if(dp[abs(e-s)][k]!= -1) return dp[abs(e-s)][k];

        long long ans = 0;
        ans = (solve(s-1, e, k-1, dp) + solve(s+1, e, k-1, dp))%md; 
        
        return dp[abs(e-s)][k] = ans;
    }

    int numberOfWays(int startPos, int endPos, int k) 
    { 
         vector<vector<int>>dp(2002, vector<int>(1002, -1)); 
         return solve(startPos, endPos, k, dp)%md;
    }
};
