// 1386. Cinema Seat Allocation

class Solution 
{
public:  
    int maxNumberOfFamilies(int n, vector<vector<int>>& reservedSeats) 
    {
         sort(reservedSeats.begin(), reservedSeats.end());
         int m = reservedSeats.size();
         vector<int>check(11);
         int last = reservedSeats[0][0];
         int ans = 0;

         for(int i = 0; i < m; i++)
         {
             if(last != reservedSeats[i][0])
             {
                last = reservedSeats[i][0];
                int cnt = 0;
                bool flag = false;
                 for(int j = 2; j <= 5; j++)
                 {
                     if(check[j] == 1) break;
                     if(j == 5)
                     {
                         cnt++;
                         flag = true;
                     }
                 }

                 if(flag == true)
                 {
                     for(int j = 6; j <= 9; j++)
                     {
                         if(check[j] == 1) break;
                         if(j == 9) cnt++;
                     }
                 }

                 else
                 {
                     for(int j = 4; j <= 7; j++)
                     {
                         if(check[j] == 1) break;
                         if(j == 7) 
                         {
                             cnt++;
                             flag = true;
                         }
                     }

                     if(flag == false)
                     {
                         for(int j = 6; j <= 9; j++)
                         {
                             if(check[j] == 1) break;
                             if(j==9) cnt++;
                         }
                     }
                 }

                 ans += (2-cnt);
                 check.assign(11, 0);
             }

             check[reservedSeats[i][1]] = 1;
         }

                int cnt = 0;
                bool flag = false;
                 for(int j = 2; j <= 5; j++)
                 {
                     if(check[j] == 1) break;
                     if(j == 5)
                     {
                         cnt++;
                         flag = true;
                     }
                 }

                 if(flag == true)
                 {
                     for(int j = 6; j <= 9; j++)
                     {
                         if(check[j] == 1) break;
                         if(j == 9) cnt++;
                     }
                 }

                 else
                 {
                     for(int j = 4; j <= 7; j++)
                     {
                         if(check[j] == 1) break;
                         if(j == 7) 
                         {
                             cnt++;
                             flag = true;
                         }
                     }

                     if(flag == false)
                     {
                         for(int j = 6; j <= 9; j++)
                         {
                             if(check[j] == 1) break;
                             if(j==9) cnt++;
                         }
                     }
                 }

                 ans += (2-cnt);

                 int res = 2*n;
                 res -= ans;
                 return res;

    }
};
