// 1600. Throne Inheritance

class ThroneInheritance 
{
public:
    int cnt = 0; 
    vector<int>adj[1000000];
    unordered_map<string, int>mp;
    unordered_map<int, string>mp2;
    unordered_map<int, int>mp3;
    
    ThroneInheritance(string kingName) 
    {
        mp[kingName] = cnt;
        mp2[cnt] = kingName;
        cnt++;
    }
    
    void birth(string parentName, string childName) 
    {
        adj[mp[parentName]].push_back(cnt);
        mp[childName] = cnt;
        mp2[cnt] = childName;
        cnt++;
    }
    

    void death(string name) 
    {
        mp3[mp[name]] = 1;
    }

     
    vector<int>ans;
    void dfs(int ind)
    { 
        if(mp3[ind] == 0)
        ans.push_back(ind);
        for(auto it : adj[ind])
        { 
            dfs(it);
        } 
    }

    vector<string> getInheritanceOrder() 
    {
        dfs(0);
        vector<string>res;
        for(int i = 0; i < ans.size(); i++)
        {
            res.push_back(mp2[ans[i]]);
        } 

        ans.clear();
        return res;
    }
};

/**
 * Your ThroneInheritance object will be instantiated and called as such:
 * ThroneInheritance* obj = new ThroneInheritance(kingName);
 * obj->birth(parentName,childName);
 * obj->death(name);
 * vector<string> param_3 = obj->getInheritanceOrder();
 */
