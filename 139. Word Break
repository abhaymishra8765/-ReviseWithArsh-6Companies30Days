// 139. Word Break

class Solution 
{
public:
    bool wordBreak(string s, vector<string>& wordDict) 
    {
         int n = s.size();
         int dp[n];
         memset(dp, 0, sizeof(dp));
         unordered_map<string, int>mp;
         for(int i = 0; i < wordDict.size(); i++) mp[wordDict[i]] = 1;
         for(int i = 0; i < n; i++)
         {
             string t = s.substr(0, i+1);
             if(mp[t] == 1) dp[i] = 1;
             for(int j = 0; j < i; j++)
             {
                 if(dp[j] == 1)
                 {
                     string res = s.substr(j+1, i-j);
                     if(mp[res] == 1)
                     {
                         dp[i] = 1;
                         break;
                     }
                 }
             }
         }

         return dp[n-1];
    }
};
